/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package escanercnc;

import gnu.io.CommPortIdentifier;
import java.awt.Color;
import java.util.Enumeration;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Felipe
 */
public class EscanerCNC extends javax.swing.JFrame {

    Fresadora posicionador;
    Procesamiento procesamiento;
    Matriz matriz_Entrada;
    Matriz matriz_a_Fresar;
    Escaner3D escaner;
    Dibujo3D dibujante = new Dibujo3D();
    boolean puerto_ocupado;

    /**
     * Creates new form EscanerCNC
     */
    public EscanerCNC() {
        initComponents();
        this.jbEscanear.setEnabled(false);
        this.jbtSuavizar.setEnabled(false);
        this.jbtFresar.setEnabled(false);
        this.jbtPosicionar.setEnabled(false);
        this.jbtAbajo.setEnabled(false);
        this.jbtArriba.setEnabled(false);
        this.jbtAdelante.setEnabled(false);
        this.jbtDerecha.setEnabled(false);
        this.jbtAtras.setEnabled(false);
        this.jbtIzquierda.setEnabled(false);
        Enumeration listaPuertos = CommPortIdentifier.getPortIdentifiers();
        CommPortIdentifier idPuerto = null;
        while (listaPuertos.hasMoreElements()) {
            idPuerto = (CommPortIdentifier) listaPuertos.nextElement();
            this.jcbPort1.addItem(idPuerto.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtArriba = new javax.swing.JButton();
        jbtAbajo = new javax.swing.JButton();
        jbtAtras = new javax.swing.JButton();
        jbtAdelante = new javax.swing.JButton();
        jbtDerecha = new javax.swing.JButton();
        jbtIzquierda = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtxtDistancia = new javax.swing.JTextField();
        jbEscanear = new javax.swing.JButton();
        jbtFresar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbX = new javax.swing.JComboBox();
        jcbY = new javax.swing.JComboBox();
        jbtSuavizar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcbPort1 = new javax.swing.JComboBox();
        jbtConectar1 = new javax.swing.JButton();
        jbtPosicionar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbtArriba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/arriba.png"))); // NOI18N
        jbtArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtArribaActionPerformed(evt);
            }
        });

        jbtAbajo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/abajo.jpeg"))); // NOI18N
        jbtAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAbajoActionPerformed(evt);
            }
        });

        jbtAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/atras.jpeg"))); // NOI18N
        jbtAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAtrasActionPerformed(evt);
            }
        });

        jbtAdelante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/adelante.jpeg"))); // NOI18N
        jbtAdelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAdelanteActionPerformed(evt);
            }
        });

        jbtDerecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/derecha.jpeg"))); // NOI18N
        jbtDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDerechaActionPerformed(evt);
            }
        });

        jbtIzquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/escanercnc/image/izquierda.jpeg"))); // NOI18N
        jbtIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtIzquierdaActionPerformed(evt);
            }
        });

        jLabel1.setText("Distancia a mover (cm)");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtxtDistancia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtDistancia.setText("1");
        jtxtDistancia.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbEscanear.setText("Escanear");
        jbEscanear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEscanearActionPerformed(evt);
            }
        });

        jbtFresar.setText("Fresar");
        jbtFresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFresarActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccionar Dimensiones de Escaneo:");

        jLabel3.setText("En X:");

        jLabel4.setText("En Y:");

        jcbX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "5", "10", "15", "20", "25", "30" }));

        jcbY.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "5", "10", "15", "20", "25", "30" }));

        jbtSuavizar.setText("Suavizar");
        jbtSuavizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSuavizarActionPerformed(evt);
            }
        });

        jLabel6.setText("Diametro Fresa (mm):");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        jLabel7.setText("cm");

        jLabel8.setText("cm");

        jLabel9.setText("Posicionar:");

        jLabel10.setText("Puerto MÃ¡quina: ");

        jcbPort1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPort1ActionPerformed(evt);
            }
        });

        jbtConectar1.setText("Conectar");
        jbtConectar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtConectar1ActionPerformed(evt);
            }
        });

        jbtPosicionar.setText("Cambiar a Modo Posicionar");
        jbtPosicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPosicionarActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenu5.setText("Abrir Archivo ");

        jMenuItem4.setText("Imagen");
        jMenu5.add(jMenuItem4);

        jMenuItem5.setText("Fresadora");
        jMenu5.add(jMenuItem5);

        jMenu1.add(jMenu5);

        jMenuItem2.setText("Cerrar Archivo");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Escaner");

        jMenuItem11.setText("Seleccionar Dimensiones");
        jMenu2.add(jMenuItem11);

        jMenuItem6.setText("Iniciar");
        jMenu2.add(jMenuItem6);

        jMenuItem10.setText("Suavizar Bordes");
        jMenu2.add(jMenuItem10);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Fresadora");

        jMenuItem7.setText("Iniciar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem1.setText("Editar Parametros");
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ayuda");

        jMenuItem9.setText("Guia de Uso");
        jMenu4.add(jMenuItem9);

        jMenuItem8.setText("Acerca de...");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jbtIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jbtArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jbtAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jcbY, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbX, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbEscanear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jbtPosicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jcbPort1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtxtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbtConectar1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(73, 73, 73)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtFresar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jbtAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jbtAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jbtDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(190, 190, 190)
                            .addComponent(jbtSuavizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtAdelante, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jbtSuavizar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jbEscanear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbtPosicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jbtConectar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)
                                            .addComponent(jcbPort1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jbtFresar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel8))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        Fresadora fresa = new Fresadora(this.jcbPort1.getSelectedItem().toString(), "Fresadora");
        fresa.start();

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jbtArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtArribaActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorZ(posicionador.CalcularPasosMotor(0, Double.valueOf(this.jtxtDistancia.getText()) * 10, posicionador.tamaniopasosMotorZ), 5);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtArribaActionPerformed

    private void jbEscanearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEscanearActionPerformed
        int ventana_x = Integer.parseInt(this.jcbX.getSelectedItem().toString());
        int ventana_y = Integer.parseInt(this.jcbY.getSelectedItem().toString());


        /*//CREEAR VECTOR DE z
         aux_ks=0;
         double vector_z[] = new double[cantidad_puntos];
         for (int ks= 1; ks<vector_z.length;ks++){
         while(aux_ks<(ventana_x*2+1)){
         aux_ks++;    
         vector_y[ks] = this.matriz_Entrada.ObtenerDato(aux, ks);
         }
            
         aux_ks=0;        
                
         }         
         */
        if (puerto_ocupado) {
            if (this.posicionador != null) {
                this.posicionador.puertoSerie.close();
            }
        }
        this.jbtAbajo.setEnabled(false);
        this.jbtArriba.setEnabled(false);
        this.jbtAdelante.setEnabled(false);
        this.jbtDerecha.setEnabled(false);
        this.jbtAtras.setEnabled(false);
        this.jbtIzquierda.setEnabled(false);

        this.escaner = new Escaner3D(ventana_x, ventana_y, this.jcbPort1.getSelectedItem().toString());
        escaner.EnviarCaracter('u');
        JOptionPane.showMessageDialog(this, "Asegurese de colocar el sensor");    
        this.escaner.run();
        this.matriz_Entrada = this.escaner.Datos;
        this.matriz_a_Fresar=this.matriz_Entrada;

        procesamiento = new Procesamiento(this.matriz_Entrada);
        JOptionPane.showMessageDialog(null, "Fin del Escaneo");
        this.jbtSuavizar.setEnabled(true);
        this.jbtFresar.setEnabled(true);



        //new Matriz((int)(ventana_x/0.5), (int)(ventana_y/0.5), "double");



    }//GEN-LAST:event_jbEscanearActionPerformed

    private void jbtIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtIzquierdaActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorX(posicionador.CalcularPasosMotor(Double.valueOf(this.jtxtDistancia.getText()) * 10, 0, posicionador.tamaniopasosMotorX), 10);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtIzquierdaActionPerformed

    private void jbtAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAtrasActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorY(posicionador.CalcularPasosMotor(Double.valueOf(this.jtxtDistancia.getText()) * 10, 0, posicionador.tamaniopasosMotorY), 12);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtAtrasActionPerformed

    private void jbtAdelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAdelanteActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorY(posicionador.CalcularPasosMotor(0, Double.valueOf(this.jtxtDistancia.getText()) * 10, posicionador.tamaniopasosMotorY), 12);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtAdelanteActionPerformed

    private void jbtAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAbajoActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorZ(posicionador.CalcularPasosMotor(Double.valueOf(this.jtxtDistancia.getText()) * 10, 0, posicionador.tamaniopasosMotorZ), 5);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtAbajoActionPerformed

    private void jbtDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDerechaActionPerformed
        // TODO add your handling code here:
        try {
            posicionador.EnviarCaracter('g');
            posicionador.MoverMotorX(posicionador.CalcularPasosMotor(0, Double.valueOf(this.jtxtDistancia.getText()) * 10, posicionador.tamaniopasosMotorX), 10);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La distancia debe ser un numero");

        }
    }//GEN-LAST:event_jbtDerechaActionPerformed

    private void jbtConectar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtConectar1ActionPerformed
        // TODO add your handling code here:

        if (this.jbtConectar1.getText().compareTo("Conectar") == 0) {

            posicionador = new Fresadora(this.jcbPort1.getSelectedItem().toString(), "Posicionador");
            puerto_ocupado = true;
            this.jbtConectar1.setText("Desconectar");
            this.jbtConectar1.setBackground(Color.DARK_GRAY);
            this.jbEscanear.setEnabled(true);
            this.jbtPosicionar.setEnabled(true);
        } else {
            if (posicionador.puertoSerie != null) {
                posicionador.puertoSerie.close();
            }
            if (escaner != null) {
                if (escaner.puertoSerie != null) {
                    escaner.puertoSerie.close();
                }
            }
            this.jbtConectar1.setBackground(Color.LIGHT_GRAY);
            puerto_ocupado = false;
            this.jbtConectar1.setText("Conectar");
            this.jbEscanear.setEnabled(false);
        this.jbtSuavizar.setEnabled(false);
        this.jbtFresar.setEnabled(false);
        this.jbtPosicionar.setEnabled(false);
        this.jbtAbajo.setEnabled(false);
        this.jbtArriba.setEnabled(false);
        this.jbtAdelante.setEnabled(false);
        this.jbtDerecha.setEnabled(false);
        this.jbtAtras.setEnabled(false);
        this.jbtIzquierda.setEnabled(false);
        }
    }//GEN-LAST:event_jbtConectar1ActionPerformed

    private void jbtSuavizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSuavizarActionPerformed
        //try{
        //PROCESO DE SUAVISAR Y DIBUJAR
        this.procesamiento.matriz_alturas = this.matriz_Entrada;
        int cantidad_puntosx = 2 * this.procesamiento.matriz_alturas.filas - 1;
        int cantidad_puntosy = 2 * this.procesamiento.matriz_alturas.columnas - 1;
        //CREEAR VECTOR DE X
        double vector_x[] = new double[cantidad_puntosx];
        for (int ks = 0; ks < vector_x.length; ks++) {
            vector_x[ks] = ks * 0.25;
            System.out.println("Vector x "+ks+" "+vector_x[ks]);
        }

        //CREEAR VECTOR DE Y
        double vector_y[] = new double[cantidad_puntosy];
        for (int ks = 0; ks < vector_y.length; ks++) {
            vector_y[ks] = ks * 0.25;
            System.out.println("Vector y "+ks+" "+vector_y[ks]);
        }
        Matriz a = this.procesamiento.RetornarProcesadaTotal(2, 1, 1);
        for (int j = 0; j < a.columnas; j++) {
            for (int i = 0; i < a.filas; i++) {
                System.out.print(a.datos[j][i] + "\t");
            }
            System.out.print("\n");
        }

        this.dibujante.Dibujar(vector_x, vector_y, this.procesamiento.RetornarProcesadaTotal(2, 1, (int)this.matriz_Entrada.DevolverVectorAlturas()[0]).datos,1.25);
        this.matriz_a_Fresar=this.procesamiento.matriz_salida;
        this.jbtFresar.setEnabled(true);
        //}
        //catch(NullPointerException e){
        //JOptionPane.showMessageDialog(null, "No hay datos escaneados");
        //}
    }//GEN-LAST:event_jbtSuavizarActionPerformed

    private void jbtFresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFresarActionPerformed
        // TODO add your handling code here:
        //try {
            this.jbtAbajo.setEnabled(false);
            this.jbtArriba.setEnabled(false);
            this.jbtAdelante.setEnabled(false);
            this.jbtDerecha.setEnabled(false);
            this.jbtAtras.setEnabled(false);
            this.jbtIzquierda.setEnabled(false);
                if (this.escaner.bandera_fin == 1) {
                    this.escaner.puertoSerie.close();
                    this.posicionador=new Fresadora(this.jcbPort1.getSelectedItem().toString(), "Posicionador");
                    this.posicionador.EnviarCaracter('b');
                    puerto_ocupado = true;
                    if (this.procesamiento.matriz_salida!=null){
                    this.posicionador.DarDatos(matriz_a_Fresar,this.procesamiento.vector_capas,this.escaner.posicionesx,this.escaner.posicionesy );
                    }
                    else{
                    this.posicionador.DarDatos(this.matriz_a_Fresar,this.matriz_a_Fresar.DevolverVectorAlturas(),this.escaner.posicionesx,this.escaner.posicionesy );
                    }
                    posicionador.EnviarCaracter('t');
                    JOptionPane.showMessageDialog(this, "Asegurese de colocar la herramienta");
                    this.posicionador.run();
                } else {
                    JOptionPane.showMessageDialog(null, "No hay datos escaneados");
                }
          //  }
        //} catch (NullPointerException e) {
            //JOptionPane.showMessageDialog(null, "error");
        
    }//GEN-LAST:event_jbtFresarActionPerformed

    private void jbtPosicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPosicionarActionPerformed
        if (puerto_ocupado) {
            this.jbtAbajo.setEnabled(true);
            this.jbtArriba.setEnabled(true);
            this.jbtAdelante.setEnabled(true);
            this.jbtDerecha.setEnabled(true);
            this.jbtAtras.setEnabled(true);
            this.jbtIzquierda.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Se debe conectar primeramente");
        }
    }//GEN-LAST:event_jbtPosicionarActionPerformed

    private void jcbPort1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPort1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPort1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EscanerCNC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EscanerCNC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EscanerCNC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EscanerCNC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EscanerCNC().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JButton jbEscanear;
    private javax.swing.JButton jbtAbajo;
    private javax.swing.JButton jbtAdelante;
    private javax.swing.JButton jbtArriba;
    private javax.swing.JButton jbtAtras;
    private javax.swing.JButton jbtConectar1;
    private javax.swing.JButton jbtDerecha;
    private javax.swing.JButton jbtFresar;
    private javax.swing.JButton jbtIzquierda;
    private javax.swing.JButton jbtPosicionar;
    private javax.swing.JButton jbtSuavizar;
    private javax.swing.JComboBox jcbPort1;
    private javax.swing.JComboBox jcbX;
    private javax.swing.JComboBox jcbY;
    private javax.swing.JTextField jtxtDistancia;
    // End of variables declaration//GEN-END:variables
}
